Archive member included because of file (symbol)

d:/handsa/course embedded/01- imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_mulsi3.o)
                              ./main.o (__mulsi3)
d:/handsa/course embedded/01- imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodhi4.o)
                              ./main.o (__udivmodhi4)
d:/handsa/course embedded/01- imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodsi4.o)
                              ./LCD_program.o (__udivmodsi4)
d:/handsa/course embedded/01- imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
                              d:/handsa/course embedded/01- imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o (exit)
d:/handsa/course embedded/01- imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
                              ./KPD_Program.o (__do_copy_data)
d:/handsa/course embedded/01- imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                              ./ADC_Program.o (__do_clear_bss)
d:/handsa/course embedded/01- imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(itoa.o)
                              ./LCD_program.o (itoa)
d:/handsa/course embedded/01- imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(strrev.o)
                              d:/handsa/course embedded/01- imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(itoa.o) (strrev)

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00020000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD d:/handsa/course embedded/01- imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
LOAD ./ADC_Program.o
LOAD ./DIO_Program.o
LOAD ./GIE_Program.o
LOAD ./KPD_Program.o
LOAD ./LCD_program.o
LOAD ./Port_Program.o
LOAD ./Timer_Program.o
LOAD ./main.o
LOAD d:/handsa/course embedded/01- imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a
LOAD d:/handsa/course embedded/01- imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a
LOAD d:/handsa/course embedded/01- imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000      0xd80
 *(.vectors)
 .vectors       0x00000000       0x54 d:/handsa/course embedded/01- imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
                0x00000000                __vectors
                0x00000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x00000054                . = ALIGN (0x2)
                0x00000054                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000054        0x0 linker stubs
 *(.trampolines*)
                0x00000054                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000054                __ctors_start = .
 *(.ctors)
                0x00000054                __ctors_end = .
                0x00000054                __dtors_start = .
 *(.dtors)
                0x00000054                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000054        0x0 d:/handsa/course embedded/01- imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
                0x00000054                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000054        0xc d:/handsa/course embedded/01- imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000060       0x16 d:/handsa/course embedded/01- imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
                0x00000060                __do_copy_data
 .init4         0x00000076       0x10 d:/handsa/course embedded/01- imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                0x00000076                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000086        0x8 d:/handsa/course embedded/01- imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 *(.init9)
 *(.text)
 .text          0x0000008e        0x4 d:/handsa/course embedded/01- imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
                0x0000008e                __vector_1
                0x0000008e                __vector_12
                0x0000008e                __bad_interrupt
                0x0000008e                __vector_6
                0x0000008e                __vector_3
                0x0000008e                __vector_13
                0x0000008e                __vector_17
                0x0000008e                __vector_19
                0x0000008e                __vector_7
                0x0000008e                __vector_5
                0x0000008e                __vector_4
                0x0000008e                __vector_9
                0x0000008e                __vector_2
                0x0000008e                __vector_15
                0x0000008e                __vector_8
                0x0000008e                __vector_14
                0x0000008e                __vector_10
                0x0000008e                __vector_18
                0x0000008e                __vector_20
 .text          0x00000092        0x0 ./ADC_Program.o
 .text          0x00000092        0x0 ./DIO_Program.o
 .text          0x00000092        0x0 ./GIE_Program.o
 .text          0x00000092        0x0 ./KPD_Program.o
 .text          0x00000092        0x0 ./LCD_program.o
 .text          0x00000092        0x0 ./Port_Program.o
 .text          0x00000092        0x0 ./Timer_Program.o
 .text          0x00000092        0x0 ./main.o
 .text          0x00000092        0x0 d:/handsa/course embedded/01- imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_mulsi3.o)
 .text          0x00000092        0x0 d:/handsa/course embedded/01- imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodhi4.o)
 .text          0x00000092        0x0 d:/handsa/course embedded/01- imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodsi4.o)
 .text          0x00000092        0x0 d:/handsa/course embedded/01- imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .text          0x00000092        0x0 d:/handsa/course embedded/01- imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
 .text          0x00000092        0x0 d:/handsa/course embedded/01- imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
 .text          0x00000092        0x0 d:/handsa/course embedded/01- imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(itoa.o)
 .text          0x00000092        0x0 d:/handsa/course embedded/01- imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(strrev.o)
                0x00000092                . = ALIGN (0x2)
 *(.text.*)
 .text.ADC_voidInit
                0x00000092       0x10 ./ADC_Program.o
                0x00000092                ADC_voidInit
 .text.ADC_u16GetDigitalValue
                0x000000a2       0x20 ./ADC_Program.o
                0x000000a2                ADC_u16GetDigitalValue
 .text.ADC_voidGetDigitalValueAsynch
                0x000000c2       0x2a ./ADC_Program.o
                0x000000c2                ADC_voidGetDigitalValueAsynch
 .text.__vector_16
                0x000000ec       0x58 ./ADC_Program.o
                0x000000ec                __vector_16
 .text.ADC_u16GetADCRegValue
                0x00000144        0x8 ./ADC_Program.o
                0x00000144                ADC_u16GetADCRegValue
 .text.DIO_voidInit
                0x0000014c       0x16 ./DIO_Program.o
                0x0000014c                DIO_voidInit
 .text.DIO_voidSetPinDirection
                0x00000162       0xfe ./DIO_Program.o
                0x00000162                DIO_voidSetPinDirection
 .text.DIO_voidSetPinValue
                0x00000260       0xfe ./DIO_Program.o
                0x00000260                DIO_voidSetPinValue
 .text.DIO_u8GetPinValue
                0x0000035e       0x3c ./DIO_Program.o
                0x0000035e                DIO_u8GetPinValue
 .text.DIO_voidSetPortDirection
                0x0000039a       0x26 ./DIO_Program.o
                0x0000039a                DIO_voidSetPortDirection
 .text.DIO_voidSetPortValue
                0x000003c0       0x26 ./DIO_Program.o
                0x000003c0                DIO_voidSetPortValue
 .text.DIO_voidGetPortValue
                0x000003e6       0x2a ./DIO_Program.o
                0x000003e6                DIO_voidGetPortValue
 .text.GIE_voidEnable
                0x00000410        0x8 ./GIE_Program.o
                0x00000410                GIE_voidEnable
 .text.GIE_voidDisable
                0x00000418        0x8 ./GIE_Program.o
                0x00000418                GIE_voidDisable
 .text.KPD_u8GetPressedKey
                0x00000420       0xea ./KPD_Program.o
                0x00000420                KPD_u8GetPressedKey
 .text.LCD_voidSendData
                0x0000050a       0x40 ./LCD_program.o
                0x0000050a                LCD_voidSendData
 .text.LCD_voidSendString
                0x0000054a       0x26 ./LCD_program.o
                0x0000054a                LCD_voidSendString
 .text.LCD_voidWriteNumber
                0x00000570       0xe2 ./LCD_program.o
                0x00000570                LCD_voidWriteNumber
 .text.LCD_voidSendInstruction
                0x00000652       0x40 ./LCD_program.o
                0x00000652                LCD_voidSendInstruction
 .text.LCD_voidGoToPos
                0x00000692       0x14 ./LCD_program.o
                0x00000692                LCD_voidGoToPos
 .text.LCD_voidWriteSpecialCharacter
                0x000006a6       0x5a ./LCD_program.o
                0x000006a6                LCD_voidWriteSpecialCharacter
 .text.LCD_voidMyNameAra
                0x00000700       0xe6 ./LCD_program.o
                0x00000700                LCD_voidMyNameAra
 .text.LCD_voidClearDisplay
                0x000007e6        0x8 ./LCD_program.o
                0x000007e6                LCD_voidClearDisplay
 .text.LCD_voidInit
                0x000007ee       0x74 ./LCD_program.o
                0x000007ee                LCD_voidInit
 .text.PORT_voidInit
                0x00000862       0x1a ./Port_Program.o
                0x00000862                PORT_voidInit
 .text.TMRS_voidTMR0Init
                0x0000087c       0x2a ./Timer_Program.o
                0x0000087c                TMRS_voidTMR0Init
 .text.TMRS_voidTimer0SetCompareMatchValue
                0x000008a6        0x4 ./Timer_Program.o
                0x000008a6                TMRS_voidTimer0SetCompareMatchValue
 .text.TMRS_voidTimer0SetCallBack
                0x000008aa        0xe ./Timer_Program.o
                0x000008aa                TMRS_voidTimer0SetCallBack
 .text.__vector_11
                0x000008b8       0x52 ./Timer_Program.o
                0x000008b8                __vector_11
 .text.TMRS_voidTMR1Init
                0x0000090a       0x38 ./Timer_Program.o
                0x0000090a                TMRS_voidTMR1Init
 .text.TMRS_voidTimer1SetCompareMatchValue
                0x00000942        0x6 ./Timer_Program.o
                0x00000942                TMRS_voidTimer1SetCompareMatchValue
 .text.TMRS_voidTimer1SetOverflowValue
                0x00000948        0x6 ./Timer_Program.o
                0x00000948                TMRS_voidTimer1SetOverflowValue
 .text.TMRS_voidTimer1SetCallBack
                0x0000094e        0xe ./Timer_Program.o
                0x0000094e                TMRS_voidTimer1SetCallBack
 .text.ServoSwing
                0x0000095c       0x60 ./Timer_Program.o
                0x0000095c                ServoSwing
 .text.main     0x000009bc      0x2a6 ./main.o
                0x000009bc                main
 .text.GetDigital
                0x00000c62        0xe ./main.o
                0x00000c62                GetDigital
 .text.libgcc   0x00000c70       0x3e d:/handsa/course embedded/01- imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_mulsi3.o)
                0x00000c70                __mulsi3
 .text.libgcc   0x00000cae       0x28 d:/handsa/course embedded/01- imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodhi4.o)
                0x00000cae                __udivmodhi4
 .text.libgcc   0x00000cd6       0x44 d:/handsa/course embedded/01- imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodsi4.o)
                0x00000cd6                __udivmodsi4
 .text.libgcc   0x00000d1a        0x0 d:/handsa/course embedded/01- imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .text.libgcc   0x00000d1a        0x0 d:/handsa/course embedded/01- imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
 .text.libgcc   0x00000d1a        0x0 d:/handsa/course embedded/01- imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
 .text.avr-libc
                0x00000d1a       0x42 d:/handsa/course embedded/01- imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(itoa.o)
                0x00000d1a                itoa
 .text.avr-libc
                0x00000d5c       0x20 d:/handsa/course embedded/01- imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(strrev.o)
                0x00000d5c                strrev
                0x00000d7c                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00000d7c        0x0 d:/handsa/course embedded/01- imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
                0x00000d7c                exit
                0x00000d7c                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00000d7c        0x4 d:/handsa/course embedded/01- imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 *(.fini0)
                0x00000d80                _etext = .

.data           0x00800060       0xe0 load address 0x00000d80
                0x00800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800060        0x0 d:/handsa/course embedded/01- imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 .data          0x00800060        0x0 ./ADC_Program.o
 .data          0x00800060        0x0 ./DIO_Program.o
 .data          0x00800060        0x0 ./GIE_Program.o
 .data          0x00800060        0x0 ./KPD_Program.o
 .data          0x00800060        0x0 ./LCD_program.o
 .data          0x00800060        0x0 ./Port_Program.o
 .data          0x00800060        0x0 ./Timer_Program.o
 .data          0x00800060       0x98 ./main.o
 .data          0x008000f8        0x0 d:/handsa/course embedded/01- imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_mulsi3.o)
 .data          0x008000f8        0x0 d:/handsa/course embedded/01- imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodhi4.o)
 .data          0x008000f8        0x0 d:/handsa/course embedded/01- imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodsi4.o)
 .data          0x008000f8        0x0 d:/handsa/course embedded/01- imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .data          0x008000f8        0x0 d:/handsa/course embedded/01- imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
 .data          0x008000f8        0x0 d:/handsa/course embedded/01- imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
 .data          0x008000f8        0x0 d:/handsa/course embedded/01- imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(itoa.o)
 .data          0x008000f8        0x0 d:/handsa/course embedded/01- imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(strrev.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 .rodata.KPD_Au8Rows
                0x008000f8        0x4 ./KPD_Program.o
                0x008000f8                KPD_Au8Rows
 .rodata.KPD_Au8Cols
                0x008000fc        0x4 ./KPD_Program.o
                0x008000fc                KPD_Au8Cols
 .rodata.KPD_Au8Keys
                0x00800100       0x10 ./KPD_Program.o
                0x00800100                KPD_Au8Keys
 .rodata.C.5.1343
                0x00800110        0x8 ./LCD_program.o
 .rodata.C.4.1342
                0x00800118        0x8 ./LCD_program.o
 .rodata.C.3.1341
                0x00800120        0x8 ./LCD_program.o
 .rodata.C.2.1340
                0x00800128        0x8 ./LCD_program.o
 .rodata.C.1.1339
                0x00800130        0x8 ./LCD_program.o
 .rodata.C.0.1338
                0x00800138        0x8 ./LCD_program.o
 *(.gnu.linkonce.d*)
                0x00800140                . = ALIGN (0x2)
                0x00800140                _edata = .
                0x00800140                PROVIDE (__data_end, .)

.bss            0x00800140        0x9
                0x00800140                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x00800140        0x0 d:/handsa/course embedded/01- imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 .bss           0x00800140        0x0 ./ADC_Program.o
 .bss           0x00800140        0x0 ./DIO_Program.o
 .bss           0x00800140        0x0 ./GIE_Program.o
 .bss           0x00800140        0x0 ./KPD_Program.o
 .bss           0x00800140        0x0 ./LCD_program.o
 .bss           0x00800140        0x0 ./Port_Program.o
 .bss           0x00800140        0x0 ./Timer_Program.o
 .bss           0x00800140        0x0 ./main.o
 .bss           0x00800140        0x0 d:/handsa/course embedded/01- imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_mulsi3.o)
 .bss           0x00800140        0x0 d:/handsa/course embedded/01- imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodhi4.o)
 .bss           0x00800140        0x0 d:/handsa/course embedded/01- imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodsi4.o)
 .bss           0x00800140        0x0 d:/handsa/course embedded/01- imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .bss           0x00800140        0x0 d:/handsa/course embedded/01- imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
 .bss           0x00800140        0x0 d:/handsa/course embedded/01- imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
 .bss           0x00800140        0x0 d:/handsa/course embedded/01- imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(itoa.o)
 .bss           0x00800140        0x0 d:/handsa/course embedded/01- imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(strrev.o)
 *(.bss*)
 .bss.ADC_pfNotification
                0x00800140        0x2 ./ADC_Program.o
 .bss.ADC_u8BusyFlag
                0x00800142        0x1 ./ADC_Program.o
 .bss.TMRS_pfTimer1
                0x00800143        0x2 ./Timer_Program.o
 .bss.TMRS_pfTimer0OVF
                0x00800145        0x2 ./Timer_Program.o
 .bss.App_u16ADCDigitalValue
                0x00800147        0x2 ./main.o
                0x00800147                App_u16ADCDigitalValue
 *(COMMON)
                0x00800149                PROVIDE (__bss_end, .)
                0x00000d80                __data_load_start = LOADADDR (.data)
                0x00000e60                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x00800149        0x0
                0x00800149                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x00800149                PROVIDE (__noinit_end, .)
                0x00800149                _end = .
                0x00800149                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(Password_Lock_Version2.elf elf32-avr)
LOAD linker stubs
